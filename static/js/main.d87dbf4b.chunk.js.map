{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","lengthArray","App","useState","isVisible","setIsVisible","goods","setGoods","lengthValue","setLengthValue","isVisibleFn","filteredGoods","filter","good","length","className","type","onClick","value","onChange","event","currentTarget","map","item","reverse","sort","good1","good2","ReactDOM","render","document","getElementById"],"mappings":"uOAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAiK3CC,EA/JM,WACnB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,GAAD,OAAKH,IAAvC,mBAAOM,EAAP,KAAcC,EAAd,KACA,EAAsCJ,mBAAS,GAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEMC,EAAc,WAClBL,GAAcD,IAqBVO,EAAgBL,EAAMM,QAAO,SAAAC,GAAI,OAAIA,EAAKC,QAAUN,KAE1D,OACE,sBAAKO,UAAU,MAAf,WAEIX,GAEI,0BAASW,UAAU,aAAnB,UACE,wBACEA,UAAU,wCAGVC,KAAK,SACLC,QAASP,EALX,mBASA,oBAAIK,UAAU,iCAAd,0CAMPX,GAEG,0BAASW,UAAU,mBAAnB,UACE,qBAAKA,UAAU,+CAAf,SACE,oBACEA,UAAU,6CADZ,0BAUF,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,iCAAd,yBAOA,qBAAKA,UAAU,iBAAf,SACE,wBACEG,MAAOV,EACPW,SAAU,SAACC,GACTX,GAAiBW,EAAMC,cAAcH,QAHzC,SAMGjB,EAAYqB,KAAI,SAAAC,GAAI,OACnB,wBAAmBL,MAAOK,EAA1B,SACGA,GADUA,aAQrB,oBACER,UAAU,8DADZ,SAMGJ,EAAcW,KAAI,SAAAT,GAAI,OACrB,oBACEE,UAAU,MADZ,SAIE,oBACEA,UAAU,iCADZ,SAGGF,KALEA,QAWX,sBACEE,UAAU,sCADZ,UAKE,wBACEA,UAAU,6BACVC,KAAK,SACLC,QA3GO,WACnBV,GAAS,kBAAM,YAAID,GAAOkB,cAuGhB,qBAOA,wBACET,UAAU,gCACVC,KAAK,SACLC,QA9Ga,WACzBV,GAAS,kBAAM,YAAID,GAAOmB,WA0GhB,iCAOA,wBACEV,UAAU,gCACVC,KAAK,SACLC,QAjHO,WACnBV,GAAS,kBAAM,YAAID,GAChBmB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMZ,OAASa,EAAMb,cA4GrC,4BAOA,wBACEC,UAAU,+BACVC,KAAK,SACLC,QAnHA,WACZV,GAAS,2BAAUP,MACnBS,EAAe,IA8GL,sBASF,qBAAKM,UAAU,aAAf,SACE,wBACEA,UAAU,oCACVC,KAAK,SACLC,QAASP,EAHX,2BChKdkB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d87dbf4b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\nimport 'bulma/css/bulma.min.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst lengthArray: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst App:React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [goods, setGoods] = useState([...goodsFromServer]);\n  const [lengthValue, setLengthValue] = useState(1);\n\n  const isVisibleFn = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const reverseGoods = () => {\n    setGoods(() => [...goods].reverse());\n  };\n\n  const sortAlphabetically = () => {\n    setGoods(() => [...goods].sort());\n  };\n\n  const sortByLength = () => {\n    setGoods(() => [...goods]\n      .sort((good1, good2) => good1.length - good2.length));\n  };\n\n  const reset = () => {\n    setGoods(() => [...goodsFromServer]);\n    setLengthValue(1);\n  };\n\n  const filteredGoods = goods.filter(good => good.length >= lengthValue);\n\n  return (\n    <div className=\"App\">\n\n      {!isVisible\n          && (\n            <section className=\"App__start\">\n              <button\n                className=\"\n                button is-info\n                is-outlined is-medium\"\n                type=\"button\"\n                onClick={isVisibleFn}\n              >\n                Start\n              </button>\n              <h2 className=\"title is-3 has-text-white mt-5\">\n                press the button to start\n              </h2>\n            </section>\n          )}\n\n      {isVisible\n        && (\n          <section className=\"box App__section\">\n            <div className=\"App__title is-flex is-justify-content-center\">\n              <h1\n                className=\"\n                title is-1\n                is-inline-block\n                has-text-white\"\n              >\n                GoodsList:\n              </h1>\n            </div>\n\n            <div className=\"level-right\">\n              <h3 className=\"\n                mr-4 is-size-4\n                has-text-white\"\n              >\n                min length:\n              </h3>\n\n              <div className=\"select is-info\">\n                <select\n                  value={lengthValue}\n                  onChange={(event) => {\n                    setLengthValue(+(event.currentTarget.value));\n                  }}\n                >\n                  {lengthArray.map(item => (\n                    <option key={item} value={item}>\n                      {item}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            <ul\n              className=\"is-flex\n              is-flex-direction-column\n              is-align-items-center\n              mb-5\"\n            >\n              {filteredGoods.map(good => (\n                <li\n                  className=\"m-1\"\n                  key={good}\n                >\n                  <h3\n                    className=\"title is-4 has-text-white mb-1\"\n                  >\n                    {good}\n                  </h3>\n                </li>\n              ))}\n            </ul>\n\n            <div\n              className=\"\n              buttons level\n              has-background-black\"\n            >\n              <button\n                className=\"button is-info is-outlined\"\n                type=\"button\"\n                onClick={reverseGoods}\n              >\n                Reverse\n              </button>\n              <button\n                className=\"button is-success is-outlined\"\n                type=\"button\"\n                onClick={sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                className=\"button is-success is-outlined\"\n                type=\"button\"\n                onClick={sortByLength}\n              >\n                Sort by length\n              </button>\n              <button\n                className=\"button is-danger is-outlined\"\n                type=\"button\"\n                onClick={reset}\n              >\n                Reset\n              </button>\n            </div>\n\n            <div className=\"App__hide \">\n              <button\n                className=\"button is-danger is-outlined mb-5\"\n                type=\"button\"\n                onClick={isVisibleFn}\n              >\n                Hide\n              </button>\n            </div>\n\n          </section>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}